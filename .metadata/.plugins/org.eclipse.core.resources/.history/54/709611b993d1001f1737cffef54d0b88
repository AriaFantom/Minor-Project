package com.healthify.dao;

import com.healthify.util.DBUtil;
import java.sql.*;
public class InvitationDaoImpl implements InvitationDao {

	@Override
	public boolean sendInvite(Invitation invite) {
		String query = "INSERT INTO doctor_invites (doctor_email, invite_token, token_expiry, is_used) VALUES (?, ?, ?, ?);";
		
		try(Connection connection = DBUtil.getConnection();
				PreparedStatement preparedStatement = connection.prepareStatement(query)) {
			 preparedStatement.setString(1, invite.getDoctorEmail());
	            preparedStatement.setString(2, invite.getInviteToken());
	            preparedStatement.setTimestamp(3, Timestamp.valueOf(invite.getTokenExpiry()));
	            preparedStatement.setBoolean(4, invite.isUsed());
			
			    int rows = preparedStatement.executeUpdate();
				return rows > 0;
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public boolean verifyToken(String token) {
		String query = "SELECT * FROM doctor_invites WHERE invite_token = ?;";
		try(Connection connection = DBUtil.getConnection();
				PreparedStatement preparedStatement = connection.prepareStatement(query)) {
				preparedStatement.setString(1, token);
				ResultSet rs = preparedStatement.executeQuery();
				
				return rs.next();
				
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public boolean setTokenUsed(String token) {
String query = "UPDATE doctor_invites SET is_used = ? WHERE invite_token = ?;";
		
		try(Connection connection = DBUtil.getConnection();
				PreparedStatement preparedStatement = connection.prepareStatement(query)) {
				preparedStatement.setString(1, token);
	           
			
			    int rows = preparedStatement.executeUpdate();
				return rows > 0;
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
	}

}
